/*
 * File: app/store/PublicResultsStore.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.store.PublicResultsStore', {
	extend: 'Ext.data.Store',

	constructor: function(cfg) {
		var me = this;
		cfg = cfg || {};
		me.callParent([Ext.apply({
			autoLoad: false,
			storeId: 'MyJsonStore2',
			proxy: {
				type: 'ajax',
				url: '/cassandra/publicresults.json',
				reader: {
					type: 'json'
				}
			},
			listeners: {
				load: {
					fn: me.onJsonstoreLoad,
					scope: me
				}
			}
		}, cfg)]);
	},

	onJsonstoreLoad: function(store, records, successful, eOpts) {
		var rootData = store.proxy.reader.jsonData;

		Ext.getStore('PublicConsumptionPlotStore').loadData(rootData.consumptionPlotData);
		Ext.getStore('PublicConsumptionComparisonStore').loadData(rootData.energyBarsData);
		Ext.getStore('PublicEntityConsumptionStore').loadData(rootData.consumptionCategoryData);
		Ext.getStore('PublicPieChartStore').loadData(rootData.pieChartData);

		//grid default selection
		var tablepanel = Ext.getCmp('publicResultsGrid');
		var plotTitle = Ext.getCmp('total_energy_plot_title');
		var totalEnergyPlot = Ext.getCmp('total_energy_plot');
		var unit = rootData.unit;

		if (tablepanel) {
			tablepanel.selModel.doSelect(tablepanel.store.data.items[0]);
			tablepanel.columns[1].setText('Consumption (' + unit + ')');
		}

		plotTitle.setText('Total Energy Consumption for ' + rootData.consumptionCategoryData[0].name + ' : ' + rootData.consumptionCategoryData[0].consumption + ' ' + unit);
		totalEnergyPlot.axes.get(1).title = 'Consumption (' + unit + ')';
		totalEnergyPlot.redraw();
	}

});