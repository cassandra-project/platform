/*
 * File: app/store/ExpectedPower.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.store.ExpectedPower', {
	extend: 'Ext.data.Store',

	constructor: function(cfg) {
		var me = this;
		cfg = cfg || {};
		me.callParent([Ext.apply({
			autoLoad: false,
			autoSync: true,
			remoteFilter: true,
			storeId: 'ExpectedPower',
			clearOnPageLoad: false,
			proxy: {
				type: 'rest',
				limitParam: '',
				startParam: '',
				url: '/cassandra/api/expected',
				reader: {
					type: 'json',
					root: 'data',
					totalProperty: 'size'
				}
			},
			fields: [
				{
					name: 'x',
					type: 'float'
				},
				{
					name: 'y',
					type: 'float'
				}
			],
			listeners: {
				load: {
					fn: me.onJsonstoreLoad,
					scope: me
				}
			}
		}, cfg)]);
	},

	onJsonstoreLoad: function(store, records, successful, eOpts) {

		try {
			var myChart =  Ext.getCmp('MainTabPanel').getActiveTab().query('#expectedChart')[0];
			var myChartsXaxis =myChart.axes.items[0];
			myChartsXaxis.setTitle(this.proxy.reader.jsonData.xAxisLabel);
			var myChartsYaxis =myChart.axes.items[1];
			myChartsYaxis.setTitle(this.proxy.reader.jsonData.yAxisLabel);
		}
		catch(e) {}
	}

});