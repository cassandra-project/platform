/*
 * File: app/store/ClusterBasedonStore.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.store.ClusterBasedonStore', {
	extend: 'Ext.data.Store',

	constructor: function(cfg) {
		var me = this;
		cfg = cfg || {};
		me.callParent([Ext.apply({
			autoLoad: false,
			storeId: 'MyStore',
			data: [
				{
					basedonName: 'Transformer ID',
					basedonTag: 'TransformerID'
				},
				{
					basedonName: 'Topological Distance',
					basedonTag: 'TopologicalDistance'
				},
				{
					basedonName: 'Location',
					basedonTag: 'Location'
				},
				{
					basedonName: 'Social Distance',
					basedonTag: 'SocialDistance'
				},
				{
					basedonName: 'Total Energy Consumption',
					basedonTag: 'TotalEnergyConsumption'
				},
				{
					basedonName: 'Max Hourly Energy Consumption',
					basedonTag: 'MaxHourlyEnergyConsumption'
				},
				{
					basedonName: 'Min Hourly Energy Consumption',
					basedonTag: 'MinHourlyEnergyConsumption'
				},
				{
					basedonName: 'Average Active Power Per Hour',
					basedonTag: 'AverageActivePowerPerHour'
				},
				{
					basedonName: 'Average Reactive Power Per Hour',
					basedonTag: 'AverageReactivePowerPerHour'
				},
				{
					basedonName: 'Max Active Power Per Hour',
					basedonTag: 'MaxActivePowerPerHour'
				},
				{
					basedonName: 'Max Reactive Power Per Hour',
					basedonTag: 'MaxReactivePowerPerHour'
				},
				{
					basedonName: 'Min Active Power Per Hour',
					basedonTag: 'MinActivePowerPerHour'
				},
				{
					basedonName: 'Min Reactive Power Per Hour',
					basedonTag: 'MinReactivePowerPerHour'
				},
				{
					basedonName: 'Hours P',
					basedonTag: 'hoursP'
				},
				{
					basedonName: 'Hours Q',
					basedonTag: 'hoursQ'
				},
				{
					basedonName: 'Hours E',
					basedonTag: 'hoursE'
				}
			],
			fields: [
				{
					name: 'basedonName',
					type: 'string'
				},
				{
					name: 'basedonTag',
					type: 'string'
				}
			]
		}, cfg)]);
	}
});