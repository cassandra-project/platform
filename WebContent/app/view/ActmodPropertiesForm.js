/*
 * File: app/view/ActmodPropertiesForm.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.view.ActmodPropertiesForm', {
	extend: 'Ext.form.Panel',

	margin: '10px 0',
	padding: '',
	width: 687,
	autoScroll: true,
	layout: {
		type: 'auto'
	},
	bodyPadding: '10px',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'container',
					layout: {
						align: 'middle',
						pack: 'center',
						type: 'hbox'
					},
					items: [
						{
							xtype: 'fieldset',
							height: 220,
							itemId: 'actmodFieldset',
							width: 300,
							title: 'Properties',
							items: [
								{
									xtype: 'textfield',
									width: 246,
									name: 'name',
									fieldLabel: 'Name'
								},
								{
									xtype: 'textfield',
									width: 246,
									name: 'type',
									fieldLabel: 'Type'
								},
								{
									xtype: 'textareafield',
									width: 246,
									name: 'description',
									fieldLabel: 'Description'
								},
								{
									xtype: 'combobox',
									width: 246,
									name: 'day_type',
									fieldLabel: 'Day type',
									displayField: 'day_type',
									queryMode: 'local',
									store: 'DayTypeStore',
									valueField: 'day_type'
								},
								{
									xtype: 'checkboxfield',
									name: 'shiftable',
									fieldLabel: 'Shiftable',
									boxLabel: ''
								}
							]
						},
						{
							xtype: 'fieldset',
							margins: '0 10px',
							height: 220,
							itemId: 'appliancesFieldset',
							width: 300,
							autoScroll: true,
							layout: {
								type: 'auto'
							},
							title: 'Appliances'
						}
					]
				},
				{
					xtype: 'button',
					margin: '10px 0 0 290px',
					width: 70,
					autoWidth: false,
					text: 'Update',
					listeners: {
						click: {
							fn: me.onButtonClick2,
							scope: me
						}
					}
				}
			]
		});

		me.callParent(arguments);
	},

	onButtonClick2: function(button, e, options) {
		var gridIds = [];
		var myForm = this.getForm();
		var record = myForm.getRecord(),
		values = myForm.getFieldValues();

		var gridData = this.query('grid')[0].store.data;

		Ext.each(gridData.items, function(index){
			gridIds.push(index.get('_id'));

		});

		record.set('containsAppliances', gridIds);

		//gridData = this.query('grid')[1].store.data;
		//var duration = gridData.items.length > 0 ? gridData.items[0].get('_id') : '';


		/*if (record.get('repeatsNrOfTime')) 
		Ext.Ajax.request({
		url: '/cassandra/api/distr/' + record.get('repeatsNrOfTime'),
		method: 'PUT',

		params: {
		parameters: myForm.findField('parameter3').getValue(),
		distrType: myForm.findField('distrType3').getValue()
		},

		headers: {
		"Content-Type": "application/json"
		},
		scope: this,
		callback: function(response) {
		console.log(response.responseText);
		}
		});*/


		myForm.updateRecord();console.info(record);
		//record.save();
	}

});