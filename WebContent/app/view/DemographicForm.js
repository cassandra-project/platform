/*
 * File: app/view/DemographicForm.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.view.DemographicForm', {
	extend: 'Ext.form.Panel',

	autoScroll: true,
	layout: {
		type: 'auto'
	},
	bodyPadding: '10px',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'container',
					layout: {
						type: 'hbox'
					},
					items: [
						{
							xtype: 'fieldset',
							height: 220,
							itemId: 'demogFieldset',
							width: 300,
							title: 'Properties',
							items: [
								{
									xtype: 'textfield',
									width: 246,
									fieldLabel: 'Name',
									name: 'name',
									listeners: {
										change: {
											fn: me.onTextfieldChange11,
											scope: me
										}
									}
								},
								{
									xtype: 'textfield',
									width: 246,
									fieldLabel: 'Type',
									name: 'type'
								},
								{
									xtype: 'textareafield',
									width: 246,
									fieldLabel: 'Description',
									name: 'description'
								},
								{
									xtype: 'textfield',
									width: 246,
									fieldLabel: 'Number of entities',
									name: 'numberOfEntities'
								}
							]
						},
						{
							xtype: 'fieldset',
							flex: 2,
							margins: '0 10px',
							height: 220,
							itemId: 'entitiesFieldset',
							autoScroll: true,
							layout: {
								type: 'auto'
							},
							title: 'Entities',
							items: [
								{
									xtype: 'label',
									style: 'font-size:11px; font-style:italic;',
									text: '*Entities can be added by droping  persons or appliances under the collection node to the following entities grid:'
								}
							]
						}
					]
				},
				{
					xtype: 'container',
					items: [
						{
							xtype: 'button',
							itemId: 'btn',
							margin: '10px 120px',
							width: 70,
							text: 'Update',
							listeners: {
								click: {
									fn: me.onButtonClick2,
									scope: me
								}
							}
						}
					]
				}
			]
		});

		me.callParent(arguments);
	},

	onTextfieldChange11: function(field, newValue, oldValue, eOpts) {
		this.setTitle(newValue);
		var node = C.app.getNodeFromTree(this.form.getRecord().internalId);
		node.set({'name':newValue});
	},

	onButtonClick2: function(button, e, eOpts) {
		var gridGenerators = [];
		var myForm = this.getForm();
		var node = C.app.getNodeFromTree(myForm.getRecord().internalId);
		var record = C.app.getRecordByNode(node);
		var values = myForm.getValues();

		var gridData = this.query('grid')[0].store.data;

		Ext.each(gridData.items, function(item, index){
			gridGenerators.push(item.data);
		});

		record.set({
			'name':values.name,
			'type': values.type,
			'numberOfEntities': values.numberOfEntities,
			'description': values.description,
			'generators': gridGenerators
		});

		this.dirtyForm = false;

		//clear dirty record
		record.node.commit();

		if (record.isNew)
		record.isNew = false;

		//TODO: only one request to server
	}

});