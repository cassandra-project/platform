/*
 * File: app/view/LightningModuleForm.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.view.LightningModuleForm', {
	extend: 'Ext.form.Panel',

	height: 700,
	width: 685,
	layout: {
		type: 'column'
	},
	bodyPadding: 10,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'container',
					layout: {
						type: 'column'
					},
					items: [
						{
							xtype: 'fieldset',
							title: 'Room Dimensions',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Length',
									name: 'length',
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Width',
									name: 'width',
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Height',
									name: 'height',
									minValue: 0
								}
							]
						},
						{
							xtype: 'fieldset',
							margin: '0 0 0 20',
							defaults: {
								labelWidth: 160
							},
							title: 'Luminaires',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Num. of luminaires',
									name: 'luminaires_no',
									allowDecimals: false,
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Num. of lamps',
									name: 'lamps_no',
									allowDecimals: false,
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Initial Lamp Lumen Output',
									name: 'initial_lamp_lumen',
									minValue: 0
								}
							]
						}
					]
				},
				{
					xtype: 'container',
					layout: {
						type: 'column'
					},
					items: [
						{
							xtype: 'fieldset',
							padding: 14.5,
							defaults: {
								labelWidth: 140
							},
							title: 'Coefficient of Utilization',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Luminaire Height',
									name: 'luminaire_height',
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Workplane Height',
									name: 'workplane_height',
									minValue: 0
								}
							]
						},
						{
							xtype: 'fieldset',
							margin: '0 0 0 10',
							defaults: {
								labelWidth: 120
							},
							title: 'Reflectances',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Ceilings (%)',
									name: 'ceilings',
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Walls  (%)',
									name: 'walls',
									minValue: 0
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Floors  (%)',
									name: 'floors',
									minValue: 0
								}
							]
						}
					]
				},
				{
					xtype: 'container'
				},
				{
					xtype: 'fieldset',
					padding: '10 165',
					defaults: {
						labelWidth: 160
					},
					title: 'Light Loss Factor',
					items: [
						{
							xtype: 'combobox',
							fieldLabel: 'Recoverable LLF',
							name: 'recoverable_llf'
						},
						{
							xtype: 'combobox',
							fieldLabel: 'Non Recoverable LLF',
							name: 'non_recoverable_llf'
						}
					]
				},
				{
					xtype: 'fieldset',
					padding: 16,
					layout: {
						columns: 2,
						type: 'table'
					},
					title: 'Visual Comfort',
					items: [
						{
							xtype: 'fieldset',
							margin: '1 15 0 0',
							defaults: {
								labelWidth: 120
							},
							title: 'Contrast',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Object\'s Luminance Level',
									name: 'obj_luminance_lvl'
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Background Luminance Level',
									name: 'obj_luminance_lvl'
								}
							]
						},
						{
							xtype: 'fieldset',
							margin: '1 0 0 0',
							padding: '7 10',
							defaults: {
								labelWidth: 110
							},
							title: 'Background Luminance',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Illuminance @ eye of the observer',
									name: 'observed_illuminance'
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Steradian',
									name: 'steradian'
								}
							]
						},
						{
							xtype: 'fieldset',
							margin: '10 15 0 0',
							defaults: {
								labelWidth: 120
							},
							title: 'Unified Glare Rating',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Solid Angle',
									name: 'solid_angle'
								},
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Position Index',
									name: 'position_index'
								}
							]
						},
						{
							xtype: 'fieldset',
							margin: '10 0 0 0',
							padding: '4 10 11 10',
							defaults: {
								labelWidth: 110
							},
							title: 'Uniformity',
							items: [
								{
									xtype: 'numberfield',
									anchor: '100%',
									fieldLabel: 'Minimum Illuminance',
									name: 'min_illuminance'
								}
							]
						}
					]
				}
			],
			dockedItems: [
				{
					xtype: 'container',
					dock: 'bottom',
					margin: '10 0',
					defaults: {
						scale: 'medium',
						width: 100
					},
					layout: {
						align: 'middle',
						pack: 'center',
						type: 'hbox'
					},
					items: [
						{
							xtype: 'button',
							scale: 'medium',
							text: 'Update'
						},
						{
							xtype: 'button',
							handler: function(button, event) {
								button.up('form').getForm().reset();
							},
							margin: '0 0 0 20',
							scale: 'medium',
							text: 'Reset'
						}
					]
				}
			]
		});

		me.callParent(arguments);
	}

});