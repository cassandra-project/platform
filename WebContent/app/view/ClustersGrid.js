/*
 * File: app/view/ClustersGrid.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.view.ClustersGrid', {
	extend: 'Ext.grid.Panel',

	maxHeight: 400,
	width: 700,
	title: 'Clusters',
	forceFit: true,
	store: 'ClustersStore',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			viewConfig: me.processMyGridView9({

			}),
			columns: [
				{
					xtype: 'gridcolumn',
					dataIndex: 'name',
					text: 'Name'
				},
				me.processPricing({
					xtype: 'gridcolumn',
					dataIndex: 'pricing_id',
					text: 'Pricing'
				}),
				me.processBaselinepricing({
					xtype: 'gridcolumn',
					dataIndex: 'base_prc_id',
					text: 'Baseline pricing'
				})
			]
		});

		me.processClustersGrid(me);
		me.callParent(arguments);
	},

	processMyGridView9: function(config) {
		config.plugins =  
		{
			ptype: 'treetocelldragdrop',

			// Will only allow drops of the same type.
			//in order for this to work
			enforceType: true,

			nodeTypeField: 'nodeType',

			//needed since row expander plugin is used
			addToColumnIndex: -1

		};

		return config;
	},

	processPricing: function(config) {
		config.columnType = 'Pricing';
		return config;
	},

	processBaselinepricing: function(config) {
		config.columnType = 'Pricing';
		return config;
	},

	processClustersGrid: function(config) {
		/*config.plugins = {
		ptype: 'rowexpander',
		rowBodyTpl : new Ext.XTemplate(
		'<h2>Installations:</h2> {installations_}'
		)
		};*/
		return config;
	}

});