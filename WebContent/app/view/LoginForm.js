/*
 * File: app/view/LoginForm.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('C.view.LoginForm', {
	extend: 'Ext.form.Panel',

	frame: true,
	height: 206,
	id: 'LoginForm',
	itemId: 'LoginForm',
	width: 312,
	layout: {
		align: 'center',
		pack: 'center',
		type: 'vbox'
	},
	bodyPadding: '30 10',
	titleCollapse: false,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'textfield',
					name: 'username',
					fieldLabel: 'Username',
					allowBlank: false
				},
				{
					xtype: 'textfield',
					inputType: 'password',
					name: 'password',
					fieldLabel: 'Password',
					allowBlank: false
				},
				{
					xtype: 'button',
					formBind: false,
					margin: '20 0 0 0',
					padding: '5 0 5 10',
					width: 93,
					text: 'Submit',
					listeners: {
						click: {
							fn: me.onButtonClick,
							scope: me
						}
					}
				}
			]
		});

		me.callParent(arguments);
	},

	onButtonClick: function(button, e, options) {
		var loginForm = this.getForm();
		var values = loginForm.getValues();

		C.username = values.username;
		C.password = values.password;

		if (loginForm.isValid()) {
			Ext.Ajax.request({
				scope : this,
				method : 'GET',
				headers : {
					'Authorization' : 'Basic ' + values.username + '' + Ext.utils.base64.encode(values.password)
				}, 
				url : cassandra/api/prj,
				success : function(response, options) {
					var record = abstractcomponent.getRootNode();

					record.c = {
						store: {}
					};
					console.info('Creating new store for projects.');
					record.c.store = new C.store.Projects({
						storeId: record.data.nodeType+'Store',
						navigationNode: record
					});
					record.c.store.load({});
				},
				failure : function(response, options) {
					C.username = null;
					C.password = null;
					Ext.MessageBox.show({title:'Error', msg: JSON.stringify(response.errors), icon: Ext.MessageBox.ERROR, buttons: Ext.MessageBox.OK});
				}
			});

		}
	}

});